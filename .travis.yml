dist: bionic
language: python
python:
  - 3.8

jobs:
  include:
    - os: windows
      language: shell
      env:
        - BUILD_LANG=NO
        - ISO=$ISO_NO
      before_install:
        - choco config set cacheLocation $HOME/choco_cache
        - deployment/windows_dependencies.cmd
        - export PATH="/c/Python38:/c/Python38/Scripts:/c/Program Files/nodejs:/c/Program Files/ImageMagick-7.0.10-Q16:$PWD/bin:/c/ProgramData/chocolatey/lib/ffmpeg/tools:c/ProgramData/chocolatey/lib/OptiPNG/tools:$PATH"
      script:
        - npx gulp build-full-no

    - os: windows
      language: shell
      env:
        - BUILD_LANG=SE
        - ISO=$ISO_SE
      before_install:
        - choco config set cacheLocation $HOME/choco_cache
        - deployment/windows_dependencies.cmd
        - export PATH="/c/Python38:/c/Python38/Scripts:/c/Program Files/nodejs:/c/Program Files/ImageMagick-7.0.10-Q16:$PWD/bin:/c/ProgramData/chocolatey/lib/ffmpeg/tools:c/ProgramData/chocolatey/lib/OptiPNG/tools:$PATH"

    - os: linux
      env:
        - BUILD_LANG=NO
        - ISO=$ISO_NO
      script:
        - npx gulp build-full-no

    - os: linux
      env:
        - BUILD_LANG=SE
        - ISO=$ISO_SE

cache:
  npm: true
  pip: true
  directories:
    - $HOME/iso
    - $HOME/choco_cache
    - bin

addons:
  apt:
    packages:
      - ffmpeg
      - optipng
      - sshpass

before_install:
  - deployment/imagemagick.sh
  - export PATH="$PWD/bin:$PATH"
  - nvm install 10

install:
  - wget -nc -O ~/iso/mullebil.iso $ISO || true
  - python -m pip install -r requirements.txt
  - python extract_iso.py ~/iso/mullebil.iso
  - npm install

script:
  - npx gulp build-full

after_success:
  - mkdir deploy
  - tar -czf deploy/cst_${BUILD_LANG}_${TRAVIS_OS_NAME}.tgz cst_out_new
  - tar -czf deploy/Mulle_${BUILD_LANG}_${TRAVIS_OS_NAME}.tgz -C dist .
  - sshpass -p "$RSYNC_PASSWORD" rsync -r -e "ssh -o StrictHostKeyChecking=no" "deploy/" mulle@dedicated.datagutten.net:/home/mulle